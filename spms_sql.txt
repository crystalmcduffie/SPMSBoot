create trigger before_insert_genre_committee before
insert
    on
    "SPMS2".genre_committee for each row execute function "SPMS2".before_insert_genre_committee()

create or replace procedure before_insert_genre_committee(genre_id int, editor_id int, editor_status_id int) as $$ 
declare
	role_name varchar;
begin
	select name into role_name from person join role on person.role_id = role.id where person.id = editor_id;
	
	if role_name = 'editor' then 
		insert into genre_committee(genre_id,editor_id,editor_status_id) values(genre_id,editor_id,editor_status_id);
    else
    	raise exception 'Person % must be an editor', editor_id;
    end if;
	end;
$$ language plpgsql;

create or replace function before_insert_genre_committee()
returns trigger
language plpgsql
as 
$$
declare
	role_name varchar;
	editor_id int;
	status_name varchar;
	editor_status_id int;
begin
	select new.editor_id into editor_id;
	select name into role_name from person join role on person.role_id = role.id where person.id = editor_id;
	select new.editor_status_id into editor_status_id;
	select name into status_name from editor_status where id = editor_status_id;
	if status_name = 'general' then
		raise exception 'Editor status cannot be general in a genre committee';
	end if;
	if role_name = 'editor' and status_name <> 'general' then
		insert into genre_committee(genre_id,editor_id,editor_status_id) values(new.genre_id,new.editor_id,new.editor_status_id);
    else
    	raise exception 'Person % must be an editor', editor_id;
    end if;
   return new;
	end;
$$